
package proxy;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.3
 * Generated source version: 3.0
 * 
 */
@WebService(name = "StudentWebService", targetNamespace = "http://webService.sid.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StudentWebService {


    /**
     * 
     * @param code
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getName", targetNamespace = "http://webService.sid.org/", className = "proxy.GetName")
    @ResponseWrapper(localName = "getNameResponse", targetNamespace = "http://webService.sid.org/", className = "proxy.GetNameResponse")
    @Action(input = "http://webService.sid.org/StudentWebService/getNameRequest", output = "http://webService.sid.org/StudentWebService/getNameResponse")
    public String getName(
        @WebParam(name = "code", targetNamespace = "")
        int code);

    /**
     * 
     * @param age
     * @return
     *     returns double
     */
    @WebMethod(operationName = "IncrementAge")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "IncrementAge", targetNamespace = "http://webService.sid.org/", className = "proxy.IncrementAge")
    @ResponseWrapper(localName = "IncrementAgeResponse", targetNamespace = "http://webService.sid.org/", className = "proxy.IncrementAgeResponse")
    @Action(input = "http://webService.sid.org/StudentWebService/IncrementAgeRequest", output = "http://webService.sid.org/StudentWebService/IncrementAgeResponse")
    public double incrementAge(
        @WebParam(name = "age", targetNamespace = "")
        int age);

    /**
     * 
     * @return
     *     returns java.util.List<proxy.Students>
     */
    @WebMethod(operationName = "ListStudents")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "ListStudents", targetNamespace = "http://webService.sid.org/", className = "proxy.ListStudents")
    @ResponseWrapper(localName = "ListStudentsResponse", targetNamespace = "http://webService.sid.org/", className = "proxy.ListStudentsResponse")
    @Action(input = "http://webService.sid.org/StudentWebService/ListStudentsRequest", output = "http://webService.sid.org/StudentWebService/ListStudentsResponse")
    public List<Students> listStudents();

    /**
     * 
     * @return
     *     returns proxy.Students
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStudent", targetNamespace = "http://webService.sid.org/", className = "proxy.GetStudent")
    @ResponseWrapper(localName = "getStudentResponse", targetNamespace = "http://webService.sid.org/", className = "proxy.GetStudentResponse")
    @Action(input = "http://webService.sid.org/StudentWebService/getStudentRequest", output = "http://webService.sid.org/StudentWebService/getStudentResponse")
    public Students getStudent();

}
